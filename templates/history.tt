[%#

Copyright (c) 2003-2010, Andrew Dunstan

See accompanying License file for license details

-%]
[%- BLOCK cl %] class="[% SWITCH bgfor -%]
  [%- CASE 'OK' %]pass[% CASE 'ContribCheck' %]warn[% CASE [ 'Check' 'InstallCheck' ] %]warnx[% CASE %]fail[% END %]"
[%- END -%]
[% WRAPPER 'page.tt' 
	title = 'PostgreSQL BuildFarm History'
	bodyclass = 'history'
	pagebutton = 'none'
%]
<h1>PostgreSQL BuildFarm Status History</h1>
  <table cellspacing="0">
    <tr><th class="head" colspan="3">System Detail</th></tr>
    <tr class="member"><th>Farm member</th><td>[% member %]</td></tr>
    <tr><th>OS</th><td>[% statrows.0.operating_system %] [% statrows.0.os_version %]</td></tr>
    <tr><th>Compiler</th><td>[% statrows.0.compiler %] [% statrows.0.compiler_version %]</td></tr>
    <tr><th>Architecture</th><td>[% statrows.0.architecture %]</td></tr>
    <tr><th>Owner</th><td>[% statrows.0.owner_email %]</td></tr>
  </table>
[% IF statrows.0.sys_notes %]
    <br />
    <table>
     <tr>
       <th class="head" rowspan="2">System Notes</th>
       <th>Date</th>
       <th>Notes</th>
     </tr>
     <tr>
      <td>[% statrows.0.sys_notes_date %]</td>
      <td>[% statrows.0.sys_notes %]</td>
     </tr>
   </table>
[% END %]
[% IF other_branches %]
    <br />
    <table>
      <tr>
        <th class="head">Other branches</th>
	[% FOREACH ob IN other_branches %]
          <td><a href="/cgi-bin/show_history.pl?nm=[% member %]&amp;br=[% ob %]">[% ob %]</a></td>
        [% END %]
      </tr>
    </table>
[% END %]

  <h3>Branch: [% branch %][% IF statrows.size >= hm %] (last [% hm %] entries shown)[% END %]</h3>
[% BLOCK stdet %]
    <tr [% PROCESS cl bgfor=row.stage %]>
      <td>[%- row.when_ago | replace('\s','&nbsp;') %]&nbsp;ago&nbsp;</td>
      <td class="status">[% row.stage -%]&nbsp;[[% row.git_head_ref.substr(0,7) %]]</td>
      <td class="status"><a href="show_log.pl?nm=
               [%- row.sysname %]&amp;dt=
               [%- row.snapshot | uri %]">
                [%- IF row.stage != 'OK' %]Details[% ELSE %]Config[% END -%]</a></td>

    </tr>
[% END %]
<table border="0"> <tr>
  [% colsize = statrows.size / 3 %]
  [% TRY %][% PERL %] 
      use POSIX qw(ceil);
      $stash->set(colsize => ceil($stash->get('colsize'))); 
	  $stash->set(colsize => 1) if $stash->get('colsize') < 1;
  [% END %][% CATCH %]<!-- [% error.info %] --> [% END %]
  [% low = 0; WHILE low < statrows.size ; high =  low + colsize - 1 ; IF high > statrows.max ; high = statrows.max ; END %] 
    <td><table cellspacing="0">
        [% FOREACH xrow IN statrows.slice(low,high) %][% PROCESS stdet row=xrow %][% END %]
    </table></td>
  [% low = high + 1; END %]
</table>
[% END %]
